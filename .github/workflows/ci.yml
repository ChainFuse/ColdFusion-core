name: Compile, Test, and Publish

on:
  push:
    branches:
      - '**'
    paths:
      - '.github/workflows/ci.yml'
      - 'src/**'
      - 'test/**'
      - 'action.yml'
      - 'package*.json'
      - 'tsconfig.json'
    tags-ignore:
      - '**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
      - uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        with:
          disable-sudo: true
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version: lts/*
          check-latest: true
          cache: 'npm'
      - run: npm ci
      # - name: Prepare cache
      #   id: ncc-cache
      #   run: echo "NCC_CACHE_DIR=$(npx ncc cache dir)" >> $GITHUB_OUTPUT
      # - uses: actions/cache/restore@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
      #   with:
      #     path: |
      #       ${{ steps.ncc-cache.outputs.NCC_CACHE_DIR }}
      #     key: ncc-cache-${{ hashFiles('src/**', 'package*.json') }}
      #     restore-keys: |
      #       ncc-cache-
      #     enableCrossOsArchive: true
      - run: npm run build:pre
      - run: npm run build:main
      - run: npm run build:post
      # - uses: actions/cache/save@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
      #   with:
      #     path: |
      #       ${{ steps.ncc-cache.outputs.NCC_CACHE_DIR }}
      #     key: ncc-cache-${{ hashFiles('src/**', 'package*.json') }}
      #     enableCrossOsArchive: true
      - uses: actions/upload-artifact@c7d193f32edcb7bfad88892161225aeda64e9392 # v4.0.0
        with:
          name: dist
          path: ${{ github.workspace }}/dist
          if-no-files-found: error
          retention-days: 1
          compression-level: 9
  test:
    needs: ['compile']
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, macos-13]
    steps:
      - uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        with:
          disable-sudo: true
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: ./
  publish:
    needs: ['test']
    runs-on: ubuntu-latest
    steps:
      - uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        with:
          disable-sudo: true
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Delete old compiled action
        run: rm -rv dist
        shell: bash
      - uses: actions/download-artifact@f44cd7b40bfd40b6aa1cc1b9b5b7bf03d3c67110 # v4.1.0
        with:
          name: dist
          path: ${{ github.workspace }}/dist
      - name: Git Setup
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      - run: git add dist/
      - run: git commit -m "[ci skip] $PREVIOUS_GIT_MESSAGE"
        shell: bash
        env:
          PREVIOUS_GIT_MESSAGE: ${{ github.event.head_commit.message }}
      - run: git push
